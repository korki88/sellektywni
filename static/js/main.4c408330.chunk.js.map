{"version":3,"sources":["tests/GsapObject.js","App.js","index.js"],"names":["GsapObject","data","useState","setData","wrapper","useRef","tl","gsap","timeline","setConfig","key","value","c","config","a","set","current","autoAlpha","addLabel","pause","status","play","tweenFromTo","useEffect","setup","to","duration","console","log","load","unload","ref","id","className","App","name","style","width","height","onClick","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAGe,SAASA,EAAT,GAA+B,IAATC,EAAQ,EAARA,KAAQ,EAChBC,mBAASD,GADO,mBAC3BE,GAD2B,WAErCC,EAAUC,iBAAO,MACjBC,EAAKC,IAAKC,WAChB,SAASC,EAAUC,EAAKC,GACtB,OAAOR,GAAQ,SAACS,GAAD,mBAAC,eACXA,GADU,IAEbC,OAAO,2BACFD,EAAEC,QADD,kBAEHH,EAAMC,SAT8B,4CAa3C,sBAAAG,EAAA,sEACQR,EAAGS,IAAIX,EAAQY,QAAS,CAAEC,UAAW,IAAKC,SAAS,SAASC,QADpE,4CAb2C,kEAgB3C,sBAAAL,EAAA,yDAC6B,SAAvBb,EAAKY,OAAOO,OADlB,gCAEUd,EAAGe,OAFb,OAGIZ,EAAU,SAAU,UAHxB,4CAhB2C,kEAsB3C,sBAAAK,EAAA,yDAC6B,WAAvBb,EAAKY,OAAOO,OADlB,gCAEUd,EAAGgB,aAAY,EAAM,SAF/B,OAGIb,EAAU,SAAU,YAHxB,4CAtB2C,sBAiD3C,OArBAc,qBAAU,YA5BiC,mCA6BzCC,GACAlB,EAAGmB,GAAGrB,EAAQY,QAAS,CAAEU,SAAU,EAAGT,UAAW,OAEnDM,qBAAU,WAER,OADAI,QAAQC,IAAI3B,EAAKY,OAAOO,QAChBnB,EAAKY,OAAOO,QAClB,IAAK,QAnCkC,mCAoCrCS,GACA,MACF,IAAK,SACHF,QAAQC,IAAI,qBACZ,MACF,IAAK,UAzCkC,mCA0CrCE,GACA,MACF,QACEH,QAAQC,IAAI,6CAEf,CAAC3B,EAAKY,OAAOO,SAET,qBAAKW,IAAK3B,EAAS4B,GAAI/B,EAAKY,OAAOmB,GAAIC,UAAU,eChD3C,SAASC,IAAO,IAAD,EACJhC,mBAAS,CAC/BW,OAAQ,CACNmB,GAAI,EACJG,KAAM,aACNf,OAAQ,UALgB,mBACrBnB,EADqB,KACfE,EADe,KAa5B,OACE,sBAAK8B,UAAU,MAAf,UACE,cAACjC,EAAD,CAAYC,KAAMA,IAClB,wBACAmC,MAAO,CAACC,MAAM,QAASC,OAAO,QAC5BC,QAVN,WACE,IAAIC,EAA+B,SAAvBvC,EAAKY,OAAOO,OAAoB,SAAW,OAEvD,OADAjB,GAAQ,SAAAS,GAAC,kCAAUA,GAAV,IAAaC,OAAO,2BAAID,EAAEC,QAAP,IAAeO,OAAQoB,SAC5Cb,QAAQC,IAAI3B,SCVvBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACT,EAAD,MAEFU,SAASC,eAAe,W","file":"static/js/main.4c408330.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport gsap from \"gsap\";\r\n\r\nexport default function GsapObject({ data }) {\r\n  const [newData, setData] = useState(data);\r\n  const wrapper = useRef(null);\r\n  const tl = gsap.timeline();\r\n  function setConfig(key, value) {\r\n    return setData((c) => ({\r\n      ...c,\r\n      config: {\r\n        ...c.config,\r\n        [key]: value,\r\n      },\r\n    }));\r\n  }\r\n  async function setup() {\r\n    await tl.set(wrapper.current, { autoAlpha: 0 }).addLabel(\"setup\").pause();\r\n  }\r\n  async function load() {\r\n    if (data.config.status === \"load\") {\r\n      await tl.play();\r\n      setConfig(\"status\", \"loaded\");\r\n    }\r\n  }\r\n  async function unload() {\r\n    if (data.config.status === \"unload\") {\r\n      await tl.tweenFromTo(true, \"setup\");\r\n      setConfig(\"status\", \"unloaded\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setup();\r\n    tl.to(wrapper.current, { duration: 2, autoAlpha: 1 });\r\n  });\r\n  useEffect(() => {\r\n    console.log(data.config.status);\r\n    switch (data.config.status) {\r\n      case \"load\":\r\n        load();\r\n        break;\r\n      case \"loaded\":\r\n        console.log(\"Object is loaded.\");\r\n        break;\r\n      case \"unload\":\r\n        unload();\r\n        break;\r\n      default:\r\n        console.log(\"Unable to take action with GsapObject.\");\r\n    }\r\n  }, [data.config.status]);\r\n\r\n  return <div ref={wrapper} id={data.config.id} className=\"gsapObject\"></div>;\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport GsapObject from \"./tests/GsapObject\";\n\nexport default function App() {\n  const [data, setData] = useState({\n    config: {\n      id: 1,\n      name: \"GsapObject\",\n      status: \"load\",\n    },\n  })\n  function handleClick(){\n    let state = data.config.status === 'load' ? 'unload' : 'load'\n    setData(c =>  ({...c, config:{...c.config, status: state}}))\n    return console.log(data)\n  }\n  return (\n    <div className=\"App\">\n      <GsapObject data={data} />\n      <button\n      style={{width:'200px', height:'50px'}}\n        onClick={handleClick}\n      ></button>\n    </div>\n  );\n}\n\n//const wrapper = useRef(null);\n\n//   useEffect(() => {\n//     const [splash, nav] = wrapper.current.children;\n//     const [logo] = splash.children;\n//     const [navTabs, navSwitch, navMain, navBasket] = nav.children;\n//     const [contentBasket] = navBasket.children;\n//     const [contentMain] = navMain.children;\n//     const [contentSwitch] = navSwitch.children;\n//     const [contentTabs] = navTabs.children;\n\n//     const tl = gsap.timeline();\n//     tl.set([navTabs, navSwitch, navMain, navBasket],{y:'-50%', x:'-50%'})\n//     tl.to(logo, { scale: 1, ease: Back.easeOut.config(1.7), duration: 1 })\n//     .to(navBasket, {scale:'1', duration:1}, '-=.7')\n//     .to(navMain, {scale:'1', duration:1}, '-=.9')\n//     .to(navSwitch, {scale:'1', duration:1}, '-=.9')\n//     .to(navTabs, {scale:'1', duration:1}, '-=.9')\n//     .to(splash, {duration:1, top:'75%', autoAlpha:'.4', zIndex:3})\n//     .to(nav, {duration:1, top:'4%'},'-=1')\n//     .to([contentBasket, contentMain, contentSwitch, contentTabs], {scale:1, duration:1},'-=.5')\n\n// });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n  \n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals(console.log);\n"],"sourceRoot":""}